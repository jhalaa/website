{"version":3,"sources":["components/resume.pdf","components/Header.js","components/Education.js","components/Skills.js","components/Experience.js","components/Content.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","openResume","bind","assertThisInitialized","window","open","react_default","a","createElement","Navbar","className","expand","sticky","Nav","navbar","NavItem","react_social_icons","url","fgColor","Button","href","Pdf","target","Component","Education","Toast","ToastHeader","ToastBody","Skills","index_esm","value","text","Experience","Content","state","mood","changeMood","scrollTo","setState","setTimeout","Jumbotron","id","onClick","Cat","size","color","components_Experience","components_Education","components_Skills","App","components_Header","components_Content","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0460f3c1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/resume.afc42687.pdf\";","import React, {Component} from 'react';\nimport {SocialIcon} from 'react-social-icons';\nimport Pdf from './resume.pdf'\n\nimport {\n    Button,\n    Navbar,\n    Nav,\n    NavItem,\n} from 'reactstrap';\n\nclass Header extends Component {\n    constructor(props) {\n        super(props);\n        this.openResume = this.openResume.bind(this);\n    }\n\n    openResume() {\n        window.open(\"~/src/assets/resume.pdf\", \"_blank\");\n    }\n\n    render() {\n        return (\n            <Navbar className=\"header\" expand=\"md\" sticky={'top'}>\n                <Nav className=\"ml-auto\" navbar>\n                    <NavItem>\n                        <SocialIcon className=\"sIcon\" url=\"https://www.linkedin.com/in/jhalaa/\" fgColor=\"#fff\"/>\n                    </NavItem>\n                    <NavItem>\n                        <SocialIcon className=\"sIcon\" url=\"https://twitter.com/jhalaachinoy\" fgColor=\"#fff\"/>\n                    </NavItem>\n                    <NavItem>\n                        <SocialIcon className=\"sIcon\" url=\"https://github.com/jhalaa\" fgColor=\"#fff\"/>\n                    </NavItem>\n                    <NavItem>\n                        <SocialIcon className=\"sIcon\" url=\"https://stackoverflow.com/users/5654110/jhalaa-chinoy\" fgColor=\"#fff\"/>\n                    </NavItem>\n                    <NavItem>\n                        <SocialIcon className=\"sIcon\" url=\"https://codepen.io/jhalaa/\" fgColor=\"#fff\"/>\n                    </NavItem>\n                    <NavItem>\n                        <SocialIcon className=\"sIcon\" url=\"mailto:jhalaachinoy@gmail.com\" fgColor=\"#fff\"/>\n                    </NavItem>\n                    <Button href={Pdf} target = \"_blank\" className=\"resumeBtn\">Resume</Button>\n                </Nav>\n            </Navbar>\n        );\n    }\n\n}\n\nexport default Header;\n","import React from 'react';\nimport {Toast, ToastBody, ToastHeader} from 'reactstrap';\n\nfunction Education() {\n    return (\n        <div className=\"educationToast\">\n            <Toast>\n                <ToastHeader>\n                    Northeastern University, MS Computer Science (Sept 2017 – May 2019)\n                </ToastHeader>\n                <ToastBody>\n                    Supervised and graded practical work, advised students on lab sessions, assignments and projects. Automated the grading process.\n                </ToastBody>\n            </Toast>\n\n            <Toast>\n                <ToastHeader>\n                    VTU, BE Computer Science (Sept 2011 – July 2015)\n                </ToastHeader>\n                <ToastBody>\n                    Supervised and graded practical work, advised students on lab sessions, assignments and projects. Automated the grading process.\n                </ToastBody>\n            </Toast>\n        </div>\n    );\n}\n\nexport default Education;\n","import React from 'react';\nimport { CircularProgressbar } from 'react-circular-progressbar';\nimport 'react-circular-progressbar/dist/styles.css';\n\nfunction Skills() {\n    return (\n        <div className=\"skills\">\n            <CircularProgressbar className=\"skill\" value={90} text='Javascript' />\n            <CircularProgressbar className=\"skill\" value={90} text='React' />\n            <CircularProgressbar className=\"skill\" value={80} text='Java' />\n            <CircularProgressbar className=\"skill\" value={75} text='Angular' />\n            <CircularProgressbar className=\"skill\" value={80} text='HTML' />\n            <CircularProgressbar className=\"skill\" value={75} text='CSS' />\n            <CircularProgressbar className=\"skill\" value={90} text='Git' />\n        </div>\n);\n}\n\nexport default Skills;\n","import React from 'react';\nimport {Toast, ToastBody, ToastHeader} from 'reactstrap';\n\nfunction Experience() {\n    return (\n        <div className=\"experienceToast\">\n            <Toast>\n                <ToastHeader>\n                    Northeastern University, TA, Computer Systems (Jan 2019 – May 2019)\n                </ToastHeader>\n                <ToastBody>\n                    Supervised and graded practical work, advised students on lab sessions, assignments and projects. Automated the grading process.\n                </ToastBody>\n            </Toast>\n\n            <Toast>\n                <ToastHeader>\n                    Riivos (May 2018 - Dec 2018)\n                </ToastHeader>\n                <ToastBody>\n                        <li>Developed an ETL system to read data from different external data sources and display on the\n                            front end.\n                        </li>\n                        <li>Built new UI features using AngularJS, C3.js, Bootstrap, HTML5 and CSS3 and Kendo UI.</li>\n                        <li>Built micro services using Websockets, Node.js, RxJs, ETCD, Cassandra, Elastic Search and\n                            AWS.\n                        </li>\n                        <li>Core member of the development team, instrumental in executing out various tasks of the\n                            product development cycle including story\n                            creation, application development, bugs triage and resolution, conducting demos to external\n                            stakeholders.\n                        </li>\n                        <li>Advocated and implemented the use of eslint and prettier for consistent styling and\n                            formatting across the codebase.\n                        </li>\n                </ToastBody>\n            </Toast>\n\n            <Toast>\n                <ToastHeader>\n                    Northeastern University, TA, Web Development (Jan 2018 – May 2018)\n                </ToastHeader>\n                <ToastBody>\n                    <li>Aid in course content development. Coursework covers the MEAN stack, OAuth and Heroku.</li>\n                    <li>Responsibilities include grading students, troubleshooting issues, resolving queries and conducting weekly code walks.</li>\n                </ToastBody>\n            </Toast>\n\n            <Toast>\n                <ToastHeader>\n                    ThoughtWorks (Aug 2015 – Aug 2017)\n                </ToastHeader>\n                <ToastBody>\n                    <li>Developed a responsive mobile web application using React.js and C# APIs. Implemented using the following technologies - Rake, NPM, Webpack, Omniture, DTM, New Relic, Chef, TeamCity and AWS. The enhanced\n                        application enhanced usability, reduced friction for the end user thereby increasing sales by 30 percent.</li>\n                        <li>Streamlined and automated internal procurement process. Tech stack included GAS, HTML5, CSS, JavaScript and JQuery.</li>\n                        <li>Designed and pitched a Facebook chatbot for ordering train tickets using Wit.ai and Facebook messenger APIs.</li>\n                        <li>Advocated and trained internal and external stakeholders on the use of continuous delivery, agile and test-driven development.</li>\n                </ToastBody>\n            </Toast>\n        </div>\n    );\n}\n\nexport default Experience;\n","import React, {Component} from 'react';\nimport {Jumbotron, Button, Navbar, Nav, NavItem} from 'reactstrap';\nimport Education from './Education';\nimport Skills from \"./Skills\";\nimport Experience from \"./Experience\";\nimport {Cat} from 'react-kawaii';\n\nclass Content extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {mood:\"happy\"};\n        this.changeMood = this.changeMood.bind(this);\n        this.changeMood();\n    }\n\n    componentDidMount() {\n        window.scrollTo(0,0);\n    }\n\n    changeMood() {\n        this.setState({mood:this.state.mood==\"happy\"?\"blissful\":\"happy\"});\n        setTimeout(this.changeMood,1000);\n    }\n\n    render() {\n        return (\n            <div>\n                <Jumbotron id=\"myJumbo\">\n                    <div className=\"row\">\n                        <div className=\"col\" >\n                        <h1 className=\"display-3\">Hello, My name is Jhalaa!</h1>\n                        <p className=\"lead\">I'm a full stack/front end developer and love building creative and innovative web applications.</p>\n                        <hr className=\"my-2\"/>\n                        <p> Complex issues and problem solving excite me! I create amazing, dynamic products by building reusable, efficient components.</p>\n                        <div className=\"jsContainer\">\n                            <div className=\"heart\"></div>\n                            <span>Javascript</span>\n                            <div className=\"heart\"></div>\n                        </div>\n\n\n\n                         <p className=\"lead\">\n                            <Button onClick={()=> window.scrollTo(0,500)} className=\"learnMore\">Learn More</Button>\n                        </p>\n                    </div>\n                     <Cat size={320} mood={this.state.mood} color=\"#ccc1ff\"/>\n\n                    </div>\n\n                </Jumbotron>\n                <div className=\"stickyNav\">\n                    <Nav className=\"secondNav\">\n                        <NavItem>\n                            <span className=\"p-5\">Experience</span>\n                        </NavItem>\n                        <NavItem>\n                            <span className=\"p-5\">Education</span>\n                        </NavItem>\n                        <NavItem>\n                            <span className=\"p-5\">Skills</span>\n                        </NavItem>\n                    </Nav>\n                </div>\n                <Experience/>\n                <Education/>\n                <Skills/>\n            </div>\n        );\n\n    }\n}\n\nexport default Content;\n","import React from 'react';\nimport './App.css';\nimport Header from './components/Header';\nimport Content from './components/Content'\nfunction App() {\n  return (\n      <div>\n          <Header/>\n          <Content/>\n      </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}